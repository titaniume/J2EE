===============================简易购物车实现================================
	------------------>
	一：类
	1，Product：商品
	2，User ：用户
	3，Order:订单
	4，OrderItem:订单项
	主要：订单项：一条记录就是一个订单项，对应一种商品，以及购买数量
	
	二：类关系
	商品---订单	一 ----> 多
		一个商品对应多条订单项
		一个条订单项对应一个商品
	订单项---订单： 多--->一
		一个订单项对应多个订单
		一个订单里面只会出现一个订单项
	订单--用户： 多--->一
	
	
	
	商品模块:
		--ProductListServlet 查询出商品到listPorduct.jsp 显示
		
	用户模块：要进行购买，还需要用户处于登陆状态，因为后续生成的订单，需要挂在某个用户的名下。
	 	登陆后-- request.getSession().setAttribute("user", user); 设置会话在里面
	 	在显示的商品页面显示用户
	 	<c:if test="${!empty user }">
			<div align="center"> 当前用户:${user.name}</div>
		</c:if>
		
	购物车模块： 
	从开发者的角度来看，购买行为 就是创建一条一条的订单项 
	而显示购物车，也就是把这些订单项显示在页面上。 
	在这个阶段，订单项都会保存在session中，直到最后生成订单的时候，才会把这些订单项保存在数据库中。
	暂时不需要为OrderItem创建表，因为在这个环节OrderItem还是保存在Session中的
	
	--然后要通过一个id获取product对象
	
	--购物商品业务：
			购买行为本身就是创建一个OrderItem对象
		           在负责购买商品的OrderItemAddServlet 中，进行如下流程
		    1. 获取购买数量
		    2. 获取购物商品的Id
		    3. 根据Id获取商品对象
		    4. 创建一个新的OrderItem 对象
		    5. 从session中取出一个List，这个list里面陆续存放购买的商品
		 	   如果是第一次从session中取出list，那么就是空，需要春节一个ArrayList
		 	6. 把新创建的OrderItem对象放入list中
		 	7. 跳转到显示购物车的listOrderItem
            相同商品:
                            遍历session中所有的OrderItem
		    如果找到对应的product.id一样的条目，就调整其数量
		    如果没有找到，就新增加一条
		
     	遇到的坑：注意respose.sendRedirect("") 括号里面不要写"/" 这里会自动去掉项目名称
     
           订单模块 :
           在购物车页面，增加一个创建订单的超链 
	通过创建订单，在Order表里新增一条数据，同时把session中的订单条目都保存到数据库中。
       	  创建order表，里面有一个uid字段用于表明该订单属于哪个用户
		   注： order是关键字，不能直接用作表名，通常的做法是加一个下划线order_
		   创建orderitem,表里有id,pid,num,oid等字段。 分别表示主键，商品对应的id,购买数量以及订单id。	   
		 OrderItem在原来的基础上，增加一个Order属性
	   
	购物车---->创建订单：
		OrderCreateServlet创建订单的Servlet
		1. 首选判断用户是否登陆，如果没有登陆跳转到登陆页面
		2. 创建一个订单对象，并设置其所属用户
		3. 把该订单对象保存到数据库中
		4. 遍历session中所有的订单项，设置他们的Order。 然后保存到数据库中
		5. 清空session中的订单项
		6. 最后打印订单创建成功
	===============================简易购物车完毕===============================
		
	